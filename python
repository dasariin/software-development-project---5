import os

class Task:
    def __init__(self, title, description):
        self.title = title
        self.description = description

    def __str__(self):
        return f"{self.title} | {self.description}"

class TaskManager:
    def __init__(self, filename="tasks.txt"):
        self.filename = filename
        self.tasks = []
        self.load_tasks()

    # Load tasks from file
    def load_tasks(self):
        if os.path.exists(self.filename):
            with open(self.filename, "r") as file:
                for line in file:
                    if line.strip():
                        title, description = line.strip().split(" | ")
                        self.tasks.append(Task(title, description))

    # Save tasks to file
    def save_tasks(self):
        with open(self.filename, "w") as file:
            for task in self.tasks:
                file.write(str(task) + "\n")

    # Create
    def add_task(self, title, description):
        self.tasks.append(Task(title, description))
        self.save_tasks()
        print("\n‚úÖ Task added successfully!")

    # Read
    def display_tasks(self):
        if not self.tasks:
            print("\n‚ö†Ô∏è No tasks available.")
            return
        print("\nüìã Task List:")
        for idx, task in enumerate(self.tasks, 1):
            print(f"{idx}. {task}")

    # Update
    def update_task(self, index, title=None, description=None):
        if 0 <= index < len(self.tasks):
            if title:
                self.tasks[index].title = title
            if description:
                self.tasks[index].description = description
            self.save_tasks()
            print("\n‚úÖ Task updated successfully!")
        else:
            print("\n‚ö†Ô∏è Invalid task number.")

    # Delete
    def delete_task(self, index):
        if 0 <= index < len(self.tasks):
            removed_task = self.tasks.pop(index)
            self.save_tasks()
            print(f"\nüóëÔ∏è Task '{removed_task.title}' deleted successfully!")
        else:
            print("\n‚ö†Ô∏è Invalid task number.")

def main():
    manager = TaskManager()

    while True:
        print("\n--- Persistent Task Manager ---")
        print("1. Add Task")
        print("2. View Tasks")
        print("3. Update Task")
        print("4. Delete Task")
        print("5. Exit")

        choice = input("Enter your choice (1-5): ")

        if choice == "1":
            title = input("Enter task title: ")
            description = input("Enter task description: ")
            manager.add_task(title, description)
        elif choice == "2":
            manager.display_tasks()
        elif choice == "3":
            manager.display_tasks()
            idx = int(input("Enter task number to update: ")) - 1
            title = input("Enter new title (press enter to skip): ")
            description = input("Enter new description (press enter to skip): ")
            manager.update_task(idx, title if title else None, description if description else None)
        elif choice == "4":
            manager.display_tasks()
            idx = int(input("Enter task number to delete: ")) - 1
            manager.delete_task(idx)
        elif choice == "5":
            print("\nüëã Exiting Persistent Task Manager. Goodbye!")
            break
        else:
            print("\n‚ö†Ô∏è Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
